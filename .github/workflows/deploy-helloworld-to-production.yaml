# There are really only two steps in this workflow
# 1 push a docker image to Amazon ECR
# 2 Deploy a cloudformation template that references the docker image
# The rest of the workflow is marshalling data from one API to the other
name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

jobs:
  builddeploy:
    name: Provision ECS Cluster, Build Docker Image, and Deploy to Cluster
    runs-on: ubuntu-latest
    environment: production

    env:
      AWS_REGION: us-west-2

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Generate docker image name from Amazon ECR registry
      id: gen-image-name
      run: |
        node tools/set-docker-image-output.js ${{ steps.login-ecr.outputs.registry }} ${{ github.sha }}

    - name: Build and push docker image to Amazon ECR registry
      run: |
        npm --dockerimage="${{ steps.gen-image-name.outputs.image }}" run docker_build
        npm --dockerimage="${{ steps.gen-image-name.outputs.image }}" run docker_push

    - name: Prepare AWS Cloudformation templates
      env:
        DST_BUCKET: cloudformation-modules.echeruo.net
      run: |
        node tools/resolve-tempate-urls.js infra/services/helloworld/cloudformation.yaml temp/s3/transformed.yaml temp/s3/modules https://${{ env.DST_BUCKET }}.s3.${{ env.AWS_REGION }}.amazonaws.com
        node tools/set-params.js infra/services/helloworld/cloudformation.parameters.json temp/s3/transformed.json ContainerImage ${{ steps.gen-image-name.outputs.image }}
        aws s3 mb s3://${{ env.DST_BUCKET }} || true
        cd temp/s3/modules
        aws s3 sync . s3://${{ env.DST_BUCKET }}

    - name: Deploy AWS Cloudformation templates
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: HelloworldCluster
        template: temp/s3/transformed.yaml
        parameter-overrides: file://${{ github.workspace }}/temp/s3/transformed.json
        no-fail-on-empty-changeset: "1"
        disable-rollback: "0"
        capabilities: "CAPABILITY_NAMED_IAM"
